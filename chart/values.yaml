global:
  image: 
    # registry: registry1.dso.mil
    # repository: ironbank/opensource/grafana/grafana-loki
    # tag: 2.3.0
    priorityClassName: null
    pullPolicy: IfNotPresent
    pullSecrets:
    - private-registry

  # -- Create Loki config for all sub-charts.
  # Uses data within 'global.config' value
  createGlobalConfig: false
  # -- Secret which Pods will consume for config.
  # Only use if 'global.createGlobalConfig' is true.
  # Default: "loki-config"
  existingSecretForConfig: ""

  objectStorage:
    # -- Endpoint for External ObjectStorage configuration
    endpoint: ""
    # -- Region for External ObjectStorage configuration
    region: ""
    # -- Comma separated list of Bucket Names for External ObjectStorage configuration
    bucketnames: ""
    # -- AWS access_key_id for External ObjectStorage configuration
    access_key_id: ""
    # -- AWS secret_access_key for External ObjectStorage configuration
    secret_access_key: ""
    # -- Grafana Specific Admin Bucket External ObjectStorage configuration
    adminBucketName: ""

  # -- Configuration value for all sub-charts.
  # For use when `global.createGlobalConfig=true` & `config.existingSecretForConfig="logging-loki"`
  config: |
    auth_enabled: false
    server:
      log_level: debug
      http_listen_port: 3100
    memberlist:
      join_members:
        - "{{ .Values.loki.fullnameOverride }}-memberlist"

    common:
      path_prefix: /var/loki
      replication_factor: 1
      ring:
        kvstore:
          store: memberlist
      storage:
        filesystem: null
        s3:
          {{- if not .Values.global.objectStorage.endpoint }}
          s3: s3://minio:minio123@minio.logging:80/loki
          {{- end }}
          {{- if .Values.global.objectStorage.endpoint }}
          endpoint: "{{ .Values.global.objectStorage.endpoint }}"
          {{- end }}
          {{- if .Values.global.objectStorage.bucketnames }}
          bucketnames: "{{ .Values.global.objectStorage.bucketnames }}"
          {{- end }}
          {{- if .Values.global.objectStorage.access_key_id }}
          access_key_id: "{{ .Values.global.objectStorage.access_key_id }}"
          {{- end }}
          {{- if .Values.global.objectStorage.secret_access_key }}
          secret_access_key: "{{ .Values.global.objectStorage.secret_access_key }}"
          {{- end }}
          {{- if .Values.global.objectStorage.region }}
          region: "{{ .Values.global.objectStorage.region }}"
          {{- end }}
          s3forcepathstyle: true
    ingester:
      chunk_target_size: 196608
      flush_check_period: 5s
      flush_op_timeout: 100m
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
    schema_config:
      configs:
      - from: 2022-01-01 # Anything in the past
        store: boltdb-shipper
        object_store: s3
        schema: v11
        index:
          prefix: loki_
          period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/boltdb-shipper-active
        cache_location: /var/loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: s3
      aws:
        {{- if not .Values.global.objectStorage.endpoint }}
        s3: s3://minio:minio123@minio.logging:80/loki
        {{- end }}
        {{- if .Values.global.objectStorage.endpoint }}
        endpoint: "{{ .Values.global.objectStorage.endpoint }}"
        {{- end }}
        {{- if .Values.global.objectStorage.bucketnames }}
        bucketnames: "{{ .Values.global.objectStorage.bucketnames }}"
        {{- end }}
        {{- if .Values.global.objectStorage.access_key_id }}
        access_key_id: "{{ .Values.global.objectStorage.access_key_id }}"
        {{- end }}
        {{- if .Values.global.objectStorage.secret_access_key }}
        secret_access_key: "{{ .Values.global.objectStorage.secret_access_key }}"
        {{- end }}
        {{- if .Values.global.objectStorage.region }}
        region: "{{ .Values.global.objectStorage.region }}"
        {{- end }}
        s3forcepathstyle: true

domain: bigbang.dev

istio:
  enabled: false

monitoring:
  enabled: false

networkPolicies:
  enabled: false
  controlPlaneCidr: 0.0.0.0/0

fullnameOverride: logging-loki

loki:
  # -- Enable Loki chart in single binary mode.
  # Recommended for smaller or non-production environments
  enabled: true
  image:
    repository: registry1.dso.mil/ironbank/opensource/grafana/loki
    tag: 2.4.2
    pullPolicy: IfNotPresent
    pullSecrets:
      - private-registry
  extraPorts:
  # -- Extra ports for loki pods.
  # Additional ports exposed to support HA communication
  - name: grpc
    port: 9095
    targetPort: grpc
    protocol: TCP
  # -- Extra ports for loki pods.
  # Additional ports exposed to support memberlist
  - name: tcp-memberlist
    port: 7946
    protocol: TCP

  fullnameOverride: logging-loki

  readinessProbe:
    initialDelaySeconds: 80
  livenessProbe:
    initialDelaySeconds: 80

  resources: 
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 256Mi
  persistence:
    enabled: false
    accessModes:
    - ReadWriteOnce
    size: 10Gi

loki-simple-scalable:
  # -- Enable upstream loki-simple-scalable based chart
  # Recommended for large production environments
  enabled: false

  fullnameOverride: logging-loki

  loki:
    image:
      # -- The Docker registry
      registry: registry1.dso.mil
      # -- Docker image repository
      repository: ironbank/opensource/grafana/loki
      # -- Overrides the image tag whose default is the chart's appVersion
      tag: 2.4.2
      # -- Docker image pull policy
      pullPolicy: IfNotPresent

  # Configuration for the write node(s)
  write:
    # -- Number of replicas for the write
    replicas: 2
    resources: 
      limits:
        cpu: 300m
        memory: 2Gi
      requests:
        cpu: 300m
        memory: 2Gi
  # Configuration for the read node(s)
  read:
    # -- Number of replicas for the read
    replicas: 2
    resources: 
      limits:
        cpu: 300m
        memory: 2Gi
      requests:
        cpu: 300m
        memory: 2Gi
  # Configuration for the gateway (fronts read/write nodes)
  gateway:
    enabled: false
    image:
      registry: registry1.dso.mil
      repository: ironbank/opensource/nginx/nginx
      tag: 1.21.6
    # Gateway service configuration
    service:
      # -- Port of the gateway service
      port: 3100

  imagePullSecrets:
    - name: private-registry

minio:
  # -- Enable minio instance support, must have minio-operator installed
  enabled: false
  # Override the minio service name for easier connection setup
  service:
    nameOverride: "minio.logging.svc.cluster.local"
  tenants:
    # -- Minio root credentials
    secrets:
      name: "loki-objstore-creds"
      accessKey: "minio"
      secretKey: "minio123" # default key, change this!
    # -- Buckets to be provisioned to for tenant
    buckets:
      - name: loki
    # -- Users to to be provisioned to for tenant
    users:
      - name: minio-user
    # -- User credentials to create for above user. Otherwise password is randomly generated.
    # This auth is not required to be set or reclaimed for minio use with Loki
    defaultUserCredentials:
      username: "minio-user"
      password: ""
    ## Specification for MinIO Pool(s) in this Tenant.
    pools:
      - servers: 1
        volumesPerServer: 4
        size: 750Mi
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
          fsGroup: 1001
    metrics:
      enabled: false
      port: 9000
      memory: 128Mi

serviceAccount:
  create: true
  name: null
  annotations: {}
  automountServiceAccountToken: true

gel:
  # -- Enable Grafana Enterprise Logs chart
  enabled: false
  # -----------------------------------------
  # Configuration for `enterprise-logs` chart
  # -----------------------------------------

  # -- Overrides the chart's name
  nameOverride: null

  # -- Overrides the chart's computed fullname
  fullnameOverride: null

  # -- Definition of the Docker image for Grafana Enterprise Logs
  # If the image block is overwritten in a custom values file, it is also
  # required to update the values in the `loki-distributed.loki.image` block.
  # This can be done by copying the values, or like here, by using an anchor and
  # a pointer.
  image: &image
    # -- The container registry to use
    registry: registry.dso.mil
    # -- The image repository to use
    repository: platform-one/big-bang/apps/sandbox/loki/enterprise-logs
    # -- The version of Grafana Enterprise Logs
    tag: v1.3.0
    # -- Defines the policy how and when images are pulled
    pullPolicy: IfNotPresent
    # -- Additional image pull secrets
    pullSecrets: []

  # -- Definition of the ServiceAccount for containers
  # Any additional configuration of the ServiceAccount has to be done in
  # `loki-distributed.serviceAccount`.
  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    # If this value is changed to `false`, it also needs to be reflected in
    # `loki-distributed.serviceAccount.create`.
    create: true

  # -- External config.yaml
  # A GEL configuration file may be provided as Kubernetes Secret outside of this Helm chart.
  useExternalConfig: false
  externalConfigName: loki-config
  externalConfigVersion: "0"

  # -- External license.jwt .Values.global.objectStorage.bucketnames }}
  # A GEL license file may be provided as Kubernetes Secret outside of this Helm chart.
  useExternalLicense: false
  externalLicenseName: enterprise-logs-license
  externalLicenseVersion: "0"

  # -- Grafana Enterprise Logs license
  # In order to use Grafana Enterprise Logs features, you will need to provide
  # the contents of your Grafana Enterprise Logs license, either by providing the
  # contents of the license.jwt, or the name Kubernetes Secret that contains your
  # license.jwt.
  # To set the license contents, use the flag `--set-file 'license.contents=./license.jwt'`
  license:
    contents: "NOTAVALIDLICENSE"
    cluster_name: null

  # -- Configuration for `tokengen` target
  tokengen:
    # -- Whether the job should be part of the deployment
    enable: true
    # -- Additional CLI arguments for the `tokengen` target
    extraArgs: {}
    # -- Additional Kubernetes environment
    env: []
    # -- Additional labels for the `tokengen` Job
    labels: {}
    # -- Additional annotations for the `tokengen` Job
    annotations: {}
    # -- Additional volumes for Pods
    extraVolumes: []
    # -- Additional volume mounts for Pods
    extraVolumeMounts: []
    # -- Run containers as user `enterprise-logs(uid=10001)`
    securityContext:
      runAsNonRoot: true
      runAsGroup: 10001
      runAsUser: 10001
      fsGroup: 10001

    priorityClassName: null

  # -- Configuration for the `admin-api` target
  adminApi:
    # -- Define the amount of instances
    replicas: 1
    # -- Additional CLI arguments for the `admin-api` target
    extraArgs: {}
    # -- Additional labels for the `admin-api` Deployment
    labels: {}
    # -- Additional annotations for the `admin-api` Deployment
    annotations: {}
    # -- Additional labels and annotations for the `admin-api` Service
    service:
      labels: {}
      annotations: {}
    # -- Run container as user `enterprise-logs(uid=10001)`
    # `fsGroup` must not be specified, because these security options are applied
    # on container level not on Pod level.
    securityContext:
      runAsNonRoot: true
      runAsGroup: 10001
      runAsUser: 10001

    strategy:
      type: RollingUpdate

    env: []

    persistence:
      subPath:

    livenessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45

    readinessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45

    # -- Request and limit Kubernetes resources
    # -- Values are defined in small.yaml and large.yaml
    resources: {}

    initContainers: []
    extraContainers: []

    # -- Additional volumes for Pods
    extraVolumes: []
    # -- Additional volume mounts for Pods
    extraVolumeMounts: []

    # -- Affinity for admin-api Pods
    affinity: {}
    # -- Node selector for admin-api Pods
    nodeSelector: {}
    # -- Tolerations for admin-api Pods
    tolerations: []
    # -- Grace period to allow the admin-api to shutdown before it is killed
    terminationGracePeriodSeconds: 60

  # -- Configuration for the `gateway` target
  gateway:
    # -- Define the amount of instances
    replicas: 1
    # -- Additional CLI arguments for the `gateway` target
    extraArgs: {}
    # -- Additional labels for the `gateway` Pod
    labels: {}
    # -- Additional annotations for the `gateway` Pod
    annotations: {}
    # -- Additional labels and annotations for the `gateway` Service
    service:
      labels: {}
      annotations: {}
    # -- Run container as user `enterprise-logs(uid=10001)`
    securityContext:
      runAsNonRoot: true
      runAsGroup: 10001
      runAsUser: 10001
      fsGroup: 10001

    # If you want to use your own proxy URLs, set this to false.
    useDefaultProxyURLs: true

    strategy:
      type: RollingUpdate

    livenessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45

    readinessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 45

    # -- Request and limit Kubernetes resources
    # -- Values are defined in small.yaml and large.yaml
    resources: {}

    env: []

    persistence:
      subPath:

    initContainers: []
    extraContainers: []

    # -- Additional volumes for Pods
    extraVolumes: []
    # -- Additional volume mounts for Pods
    extraVolumeMounts: []

    # -- Affinity for gateway Pods
    affinity: {}
    # -- Node selector for gateway Pods
    nodeSelector: {}
    # -- Tolerations for gateway Pods
    tolerations: []
    # -- Grace period to allow the gateway to shutdown before it is killed
    terminationGracePeriodSeconds: 60


  # -- Configuration for the `compactor` target
  compactor:
    # -- Define the amount of instances
    replicas: 1
    # -- Additional CLI arguments for the `compactor` target
    extraArgs: {}
    # -- Additional labels for the `compactor` Pod
    labels: {}
    # -- Additional annotations for the `compactor` Pod
    annotations: {}
    # -- Additional labels and annotations for the `compactor` Service
    service:
      labels: {}
      annotations: {}
    # -- Run containers as user `enterprise-logs(uid=10001)`
    securityContext:
      runAsNonRoot: true
      runAsGroup: 10001
      runAsUser: 10001
      fsGroup: 10001

    strategy:
      type: RollingUpdate

    # -- Request and limit Kubernetes resources
    # -- Values are defined in small.yaml and large.yaml
    resources: {}

    persistentVolume:
      # If true compactor will create/use a Persistent Volume Claim
      # If false, use emptyDir
      #
      enabled: true
      # compactor data Persistent Volume Claim annotations
      #
      annotations: {}
      # compactor data Persistent Volume access modes
      # Must match those of existing PV or dynamic provisioner
      # Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
      #
      accessModes:
        - ReadWriteOnce
      # compactor data Persistent Volume size
      #
      size: 2Gi
      # Subdirectory of compactor data Persistent Volume to mount
      # Useful if the volume's root directory is not empty
      #
      subPath: ''
      # compactor data Persistent Volume Storage Class
      # If defined, storageClassName: <storageClass>
      # If set to "-", storageClassName: "", which disables dynamic provisioning
      # If undefined (the default) or set to null, no storageClassName spec is
      #   set, choosing the default provisioner.  (gp2 on AWS, standard on
      #   GKE, AWS & OpenStack)
      #
      # storageClass: "-"

    livenessProbe:
      failureThreshold: 20  # 10 minutes failure threshold
      httpGet:
        path: /ready
        port: http-metrics
        scheme: HTTP
      initialDelaySeconds: 180
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 1

    readinessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 60

    env: []

    initContainers: []
    extraContainers: []

    # -- Additional volumes for Pods
    extraVolumes: []
    # -- Additional volume mounts for Pods
    extraVolumeMounts: []

    # -- Affinity for compactor Pods
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: target
                    operator: In
                    values:
                      - compactor
              topologyKey: 'kubernetes.io/hostname'
    # -- Node selector for compactor Pods
    nodeSelector: {}
    # -- Tolerations for compactor Pods
    tolerations: []
    # -- Grace period to allow the compactor to shutdown before it is killed
    terminationGracePeriodSeconds: 300


